name: Test

permissions:
  issues: write

on:
  workflow_dispatch:
    inputs:
      player_name:
        description: '玩家名'
        required: true
        default: test
      rows:
        description: '行数'
        required: true
        default: '14'
      cols:
        description: '列数'
        required: true
        default: '10'
      score:
        description: '用时'
        required: true
        default: '0.00'
      time:
        description: '时间'
        required: true
        default: Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)

jobs:
  add-a-line:
    runs-on: ubuntu-latest
    steps:
      - name: Get Comment
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require("fs");
            const id_list_body = (await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: 998955288
            })).data.body;
            const id_list = id_list_body.split("\n", 3);
            console.log(id_list);
            const id = id_list[1];
            core.exportVariable("id1", id);
            core.exportVariable("id2", id_list[2]);
            core.exportVariable("id_list_body", id_list_body);

            let body = (await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: id
            })).data.body;
            const line = "| " + context.payload.inputs.player_name
              + " | " + context.payload.inputs.rows
              + " | " + context.payload.inputs.cols
              + " | " + context.payload.inputs.score
              + " | " + context.payload.inputs.time + " |";
            console.log(context.payload.inputs);
            console.log(line);
            core.exportVariable("line", line);
            const encoder = new TextEncoder();
            console.log(encoder.encode(body).length);
            body += "\n" + line;
            console.log(encoder.encode(body).length);
            await io.mkdirP(".idea");
            fs.writeFileSync(".idea/comment.txt", body);
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: 生成新评论
        run: |
          wget https://raw.githubusercontent.com/plazum/find-keke/master/high-score.py
          python high-score.py
          ls -alFR
      - name: 更新评论
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require("fs");
            const body = fs.readFileSync(".idea/processed.txt", "utf8");
            const body_length = (new TextEncoder()).encode(body).length;
            console.log(body_length);
            console.log(body);
            if (body_length <= 262144 / 262144) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: process.env.id1,
                body: body
              });
            } else {
              const board_num = parseInt(body.split("\n", 500).find(s => s.startsWith("# 计分板"))[5]) + 1;
              const new_body = "# 计分板" + board_num + "\n| --- | --- | --- | --- | --- |\n" + process.env.line;
              console.log(new_body);
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: process.env.id2,
                body: new_body
              });
              let id_list_body = process.env.id_list_body.split("\n");
              id_list_body.splice(1, 1);
              const new_id_list_body = id_list_body.join("\n");
              console.log(new_id_list_body);
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: 998955288,
                body: new_id_list_body
              });
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: process.env.id1,
                body: body
              });
            }
